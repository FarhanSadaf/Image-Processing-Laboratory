img = cv2.imread('./homo.jpg', 0)
img_h, img_w = img.shape

plt.imshow(img, 'gray')
plt.title('Input')
plt.show()

filter_homo = np.zeros((img_h, img_w), dtype=np.float32)

yh = 1.2
yl = 0.5
c = 0.1
d0 = 50

center_i, center_j = img_h // 2, img_w // 2

for i in range(img_h):
    for j in range(img_w):
        duv = (i-center_i)**2 + (j-center_j)**2
        filter_homo[i, j] = (yh-yl) * (1-np.exp(-c * (duv / d0**2))) + yl
        
plt.imshow(filter_homo, 'gray')
plt.title('Homomorphic filter')
plt.show()

F = np.fft.fft2(img)
F_shift = np.fft.fftshift(F)

plt.imshow(np.log(np.abs(F)), 'gray')
plt.title('Magnitude')
plt.show()

plt.imshow(np.log(np.abs(F_shift)), 'gray')
plt.title('Magnitude spectrum after shift')
plt.show()

# Convolve
G_shift = F_shift * filter_homo

G = np.fft.ifftshift(G_shift)
output = np.fft.ifft2(G).real

plt.imshow(output, 'gray')
plt.title('Output')
plt.show()